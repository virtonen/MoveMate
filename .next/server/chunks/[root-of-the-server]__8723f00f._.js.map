{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///Users/vvirtonen/MoveMate/src/lib/db.ts"],"sourcesContent":["import fs from \"fs\";\nimport path from \"path\";\nimport crypto from \"crypto\";\n\nexport type UUID = string;\n\nexport type User = {\n  user_id: UUID;\n  name?: string;\n  email?: string;\n  profile_url: string;\n  location_intent: string;\n  budget_range: string;\n  lease_length?: string;\n  num_occupants?: number;\n  owns_car?: boolean;\n  preferences?: unknown;\n  interests: string[];\n};\n\nexport type Neighborhood = {\n  neighborhood_id: UUID;\n  name: string;\n  city: string;\n  amenities: string[];\n  safety_rating: number;\n  walkability_score: number;\n  public_transport_score: number;\n  average_rent: number;\n};\n\nexport type Listing = {\n  listing_id: UUID;\n  address: string;\n  neighborhood_id: UUID;\n  price: number;\n  lease_length: string;\n  num_bedrooms: number;\n  num_bathrooms: number;\n  parking_available: boolean;\n  move_in_date: string; // ISO date\n  amenities: string[];\n  listing_source: string;\n  last_updated: string; // ISO\n};\n\nexport type Recommendation = {\n  recommendation_id: UUID;\n  user_id: UUID;\n  listing_id: UUID;\n  score: number;\n  recommendation_reason: string;\n};\n\nexport type CityEvent = {\n  event_id: UUID;\n  city: string;\n  event_name: string;\n  event_date: string; // ISO\n  event_type: string;\n  event_description: string;\n  event_location: string;\n};\n\nexport type DB = {\n  users: User[];\n  neighborhoods: Neighborhood[];\n  listings: Listing[];\n  recommendations: Recommendation[];\n  city_events: CityEvent[];\n};\n\nconst DATA_DIR = path.join(process.cwd(), \"src\", \"data\");\nconst FILE = path.join(DATA_DIR, \"db.json\");\n\nlet cache: DB | null = null;\n\nfunction ensureSeed(): DB {\n  if (cache) return cache;\n  if (!fs.existsSync(DATA_DIR)) fs.mkdirSync(DATA_DIR, { recursive: true });\n  if (fs.existsSync(FILE)) {\n    cache = JSON.parse(fs.readFileSync(FILE, \"utf-8\"));\n    return cache!;\n  }\n  // Seed minimal demo data\n  const sfN: Neighborhood = {\n    neighborhood_id: uuid(),\n    name: \"Mission\",\n    city: \"San Francisco\",\n    amenities: [\"Parks\", \"Gyms\", \"BART\"],\n    safety_rating: 7.2,\n    walkability_score: 9.1,\n    public_transport_score: 8.7,\n    average_rent: 2800,\n  };\n  const nyN: Neighborhood = {\n    neighborhood_id: uuid(),\n    name: \"Williamsburg\",\n    city: \"New York\",\n    amenities: [\"Subway\", \"Parks\", \"Cafes\"],\n    safety_rating: 7.8,\n    walkability_score: 9.4,\n    public_transport_score: 9.0,\n    average_rent: 3200,\n  };\n  const bosN: Neighborhood = {\n    neighborhood_id: uuid(),\n    name: \"Back Bay\",\n    city: \"Boston\",\n    amenities: [\"T\", \"Parks\", \"Museums\"],\n    safety_rating: 8.2,\n    walkability_score: 9.0,\n    public_transport_score: 8.6,\n    average_rent: 2500,\n  };\n\n  const listings: Listing[] = [\n    // SF\n    mkListing(sfN, \"123 Valencia St, SF\", 2550, 1, 1, true, [\"Gym\", \"Cafe\", \"BART\"], \"MLS\"),\n    mkListing(sfN, \"456 Dolores St, SF\", 2950, 2, 1, false, [\"Park\", \"Yoga\"], \"Craigslist\"),\n    // NY\n    mkListing(nyN, \"12 Bedford Ave, BK\", 3100, 1, 1, false, [\"Subway\", \"Nightlife\"], \"StreetEasy\"),\n    mkListing(nyN, \"85 Kent Ave, BK\", 3600, 2, 1, true, [\"Waterfront\", \"Gym\"], \"Zillow\"),\n    // Boston\n    mkListing(bosN, \"77 Boylston St, Boston\", 2200, 1, 1, false, [\"T\", \"Museum\"], \"Zillow\"),\n    mkListing(bosN, \"14 Commonwealth Ave, Boston\", 2600, 2, 1, true, [\"Parking\", \"Park\"], \"MLS\"),\n  ];\n\n  const city_events: CityEvent[] = [\n    mkEvent(\"San Francisco\", \"Mission Street Fair\", 7, \"festival\", \"Food trucks, music, and local makers.\", \"Mission District\"),\n    mkEvent(\"New York\", \"Brooklyn Tech Meetup\", 10, \"conference\", \"Talks and demos from local startups.\", \"Williamsburg\"),\n    mkEvent(\"Boston\", \"Back Bay Art Walk\", 14, \"festival\", \"Neighborhood galleries open house.\", \"Back Bay\"),\n  ];\n\n  cache = { users: [], neighborhoods: [sfN, nyN, bosN], listings, recommendations: [], city_events };\n  fs.writeFileSync(FILE, JSON.stringify(cache, null, 2));\n  return cache!;\n}\n\nfunction mkListing(n: Neighborhood, address: string, price: number, beds: number, baths: number, parking: boolean, amenities: string[], src: string): Listing {\n  return {\n    listing_id: uuid(),\n    address,\n    neighborhood_id: n.neighborhood_id,\n    price,\n    lease_length: \"12 months\",\n    num_bedrooms: beds,\n    num_bathrooms: baths,\n    parking_available: parking,\n    move_in_date: new Date().toISOString().slice(0, 10),\n    amenities,\n    listing_source: src,\n    last_updated: new Date().toISOString(),\n  };\n}\n\nfunction mkEvent(city: string, name: string, inDays: number, type: string, desc: string, loc: string): CityEvent {\n  const d = new Date();\n  d.setDate(d.getDate() + inDays);\n  return { event_id: uuid(), city, event_name: name, event_date: d.toISOString().slice(0, 10), event_type: type, event_description: desc, event_location: loc };\n}\n\nexport function uuid(): UUID {\n  // Use randomUUID when available; fall back to simple\n  if ('randomUUID' in crypto && typeof crypto.randomUUID === 'function') {\n    return crypto.randomUUID();\n  }\n  return Math.random().toString(36).slice(2) + Math.random().toString(36).slice(2);\n}\n\nexport function db(): DB {\n  return ensureSeed();\n}\n\nexport function save() {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!fs.existsSync(DATA_DIR)) fs.mkdirSync(DATA_DIR, { recursive: true });\n    fs.writeFileSync(FILE, JSON.stringify(cache, null, 2));\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAsEA,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO;AACjD,MAAM,OAAO,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,UAAU;AAEjC,IAAI,QAAmB;AAEvB,SAAS;IACP,IAAI,OAAO,OAAO;IAClB,IAAI,CAAC,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,WAAW,6FAAA,CAAA,UAAE,CAAC,SAAS,CAAC,UAAU;QAAE,WAAW;IAAK;IACvE,IAAI,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,OAAO;QACvB,QAAQ,KAAK,KAAK,CAAC,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,MAAM;QACzC,OAAO;IACT;IACA,yBAAyB;IACzB,MAAM,MAAoB;QACxB,iBAAiB;QACjB,MAAM;QACN,MAAM;QACN,WAAW;YAAC;YAAS;YAAQ;SAAO;QACpC,eAAe;QACf,mBAAmB;QACnB,wBAAwB;QACxB,cAAc;IAChB;IACA,MAAM,MAAoB;QACxB,iBAAiB;QACjB,MAAM;QACN,MAAM;QACN,WAAW;YAAC;YAAU;YAAS;SAAQ;QACvC,eAAe;QACf,mBAAmB;QACnB,wBAAwB;QACxB,cAAc;IAChB;IACA,MAAM,OAAqB;QACzB,iBAAiB;QACjB,MAAM;QACN,MAAM;QACN,WAAW;YAAC;YAAK;YAAS;SAAU;QACpC,eAAe;QACf,mBAAmB;QACnB,wBAAwB;QACxB,cAAc;IAChB;IAEA,MAAM,WAAsB;QAC1B,KAAK;QACL,UAAU,KAAK,uBAAuB,MAAM,GAAG,GAAG,MAAM;YAAC;YAAO;YAAQ;SAAO,EAAE;QACjF,UAAU,KAAK,sBAAsB,MAAM,GAAG,GAAG,OAAO;YAAC;YAAQ;SAAO,EAAE;QAC1E,KAAK;QACL,UAAU,KAAK,sBAAsB,MAAM,GAAG,GAAG,OAAO;YAAC;YAAU;SAAY,EAAE;QACjF,UAAU,KAAK,mBAAmB,MAAM,GAAG,GAAG,MAAM;YAAC;YAAc;SAAM,EAAE;QAC3E,SAAS;QACT,UAAU,MAAM,0BAA0B,MAAM,GAAG,GAAG,OAAO;YAAC;YAAK;SAAS,EAAE;QAC9E,UAAU,MAAM,+BAA+B,MAAM,GAAG,GAAG,MAAM;YAAC;YAAW;SAAO,EAAE;KACvF;IAED,MAAM,cAA2B;QAC/B,QAAQ,iBAAiB,uBAAuB,GAAG,YAAY,yCAAyC;QACxG,QAAQ,YAAY,wBAAwB,IAAI,cAAc,wCAAwC;QACtG,QAAQ,UAAU,qBAAqB,IAAI,YAAY,sCAAsC;KAC9F;IAED,QAAQ;QAAE,OAAO,EAAE;QAAE,eAAe;YAAC;YAAK;YAAK;SAAK;QAAE;QAAU,iBAAiB,EAAE;QAAE;IAAY;IACjG,6FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,MAAM,KAAK,SAAS,CAAC,OAAO,MAAM;IACnD,OAAO;AACT;AAEA,SAAS,UAAU,CAAe,EAAE,OAAe,EAAE,KAAa,EAAE,IAAY,EAAE,KAAa,EAAE,OAAgB,EAAE,SAAmB,EAAE,GAAW;IACjJ,OAAO;QACL,YAAY;QACZ;QACA,iBAAiB,EAAE,eAAe;QAClC;QACA,cAAc;QACd,cAAc;QACd,eAAe;QACf,mBAAmB;QACnB,cAAc,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,GAAG;QAChD;QACA,gBAAgB;QAChB,cAAc,IAAI,OAAO,WAAW;IACtC;AACF;AAEA,SAAS,QAAQ,IAAY,EAAE,IAAY,EAAE,MAAc,EAAE,IAAY,EAAE,IAAY,EAAE,GAAW;IAClG,MAAM,IAAI,IAAI;IACd,EAAE,OAAO,CAAC,EAAE,OAAO,KAAK;IACxB,OAAO;QAAE,UAAU;QAAQ;QAAM,YAAY;QAAM,YAAY,EAAE,WAAW,GAAG,KAAK,CAAC,GAAG;QAAK,YAAY;QAAM,mBAAmB;QAAM,gBAAgB;IAAI;AAC9J;AAEO,SAAS;IACd,qDAAqD;IACrD,IAAI,gBAAgB,qGAAA,CAAA,UAAM,IAAI,OAAO,qGAAA,CAAA,UAAM,CAAC,UAAU,KAAK,YAAY;QACrE,OAAO,qGAAA,CAAA,UAAM,CAAC,UAAU;IAC1B;IACA,OAAO,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,KAAK,CAAC;AAChF;AAEO,SAAS;IACd,OAAO;AACT;AAEO,SAAS;IACd,wCAA2C;QACzC,IAAI,CAAC,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,WAAW,6FAAA,CAAA,UAAE,CAAC,SAAS,CAAC,UAAU;YAAE,WAAW;QAAK;QACvE,6FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,MAAM,KAAK,SAAS,CAAC,OAAO,MAAM;IACrD;AACF","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///Users/vvirtonen/MoveMate/src/app/api/dashboard/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { db } from \"@/lib/db\";\n\nexport async function GET(req: Request) {\n  const { searchParams } = new URL(req.url);\n  const user_id = searchParams.get(\"user_id\");\n  if (!user_id) return NextResponse.json({ error: \"missing user_id\" }, { status: 400 });\n\n  const d = db();\n  const user = d.users.find((u) => u.user_id === user_id);\n  if (!user) return NextResponse.json({ error: \"user not found\" }, { status: 404 });\n\n  const recs = d.recommendations.filter((r) => r.user_id === user_id).sort((a, b) => b.score - a.score);\n  const listingIds = new Set(recs.map((r) => r.listing_id));\n  const listings = d.listings.filter((l) => listingIds.has(l.listing_id));\n  const events = d.city_events.filter((e) => e.city === user.location_intent);\n\n  return NextResponse.json({ user, listings, events });\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,IAAI,GAAY;IACpC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;IACxC,MAAM,UAAU,aAAa,GAAG,CAAC;IACjC,IAAI,CAAC,SAAS,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,OAAO;IAAkB,GAAG;QAAE,QAAQ;IAAI;IAEnF,MAAM,IAAI,CAAA,GAAA,kHAAA,CAAA,KAAE,AAAD;IACX,MAAM,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,IAAM,EAAE,OAAO,KAAK;IAC/C,IAAI,CAAC,MAAM,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,OAAO;IAAiB,GAAG;QAAE,QAAQ;IAAI;IAE/E,MAAM,OAAO,EAAE,eAAe,CAAC,MAAM,CAAC,CAAC,IAAM,EAAE,OAAO,KAAK,SAAS,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,GAAG,EAAE,KAAK;IACpG,MAAM,aAAa,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,IAAM,EAAE,UAAU;IACvD,MAAM,WAAW,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAM,WAAW,GAAG,CAAC,EAAE,UAAU;IACrE,MAAM,SAAS,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK,KAAK,eAAe;IAE1E,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE;QAAM;QAAU;IAAO;AACpD","debugId":null}}]
}