{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///Users/vvirtonen/MoveMate/src/lib/db.ts"],"sourcesContent":["import fs from \"fs\";\nimport path from \"path\";\nimport crypto from \"crypto\";\n\nexport type UUID = string;\n\nexport type User = {\n  user_id: UUID;\n  name?: string;\n  email?: string;\n  profile_url: string;\n  location_intent: string;\n  budget_range: string;\n  lease_length?: string;\n  num_occupants?: number;\n  owns_car?: boolean;\n  preferences?: unknown;\n  interests: string[];\n};\n\nexport type Neighborhood = {\n  neighborhood_id: UUID;\n  name: string;\n  city: string;\n  amenities: string[];\n  safety_rating: number;\n  walkability_score: number;\n  public_transport_score: number;\n  average_rent: number;\n};\n\nexport type Listing = {\n  listing_id: UUID;\n  address: string;\n  neighborhood_id: UUID;\n  price: number;\n  lease_length: string;\n  num_bedrooms: number;\n  num_bathrooms: number;\n  parking_available: boolean;\n  move_in_date: string; // ISO date\n  amenities: string[];\n  listing_source: string;\n  last_updated: string; // ISO\n};\n\nexport type Recommendation = {\n  recommendation_id: UUID;\n  user_id: UUID;\n  listing_id: UUID;\n  score: number;\n  recommendation_reason: string;\n};\n\nexport type CityEvent = {\n  event_id: UUID;\n  city: string;\n  event_name: string;\n  event_date: string; // ISO\n  event_type: string;\n  event_description: string;\n  event_location: string;\n};\n\nexport type DB = {\n  users: User[];\n  neighborhoods: Neighborhood[];\n  listings: Listing[];\n  recommendations: Recommendation[];\n  city_events: CityEvent[];\n};\n\nconst DATA_DIR = path.join(process.cwd(), \"src\", \"data\");\nconst FILE = path.join(DATA_DIR, \"db.json\");\n\nlet cache: DB | null = null;\n\nfunction ensureSeed(): DB {\n  if (cache) return cache;\n  if (!fs.existsSync(DATA_DIR)) fs.mkdirSync(DATA_DIR, { recursive: true });\n  if (fs.existsSync(FILE)) {\n    cache = JSON.parse(fs.readFileSync(FILE, \"utf-8\"));\n    return cache!;\n  }\n  // Seed minimal demo data\n  const sfN: Neighborhood = {\n    neighborhood_id: uuid(),\n    name: \"Mission\",\n    city: \"San Francisco\",\n    amenities: [\"Parks\", \"Gyms\", \"BART\"],\n    safety_rating: 7.2,\n    walkability_score: 9.1,\n    public_transport_score: 8.7,\n    average_rent: 2800,\n  };\n  const nyN: Neighborhood = {\n    neighborhood_id: uuid(),\n    name: \"Williamsburg\",\n    city: \"New York\",\n    amenities: [\"Subway\", \"Parks\", \"Cafes\"],\n    safety_rating: 7.8,\n    walkability_score: 9.4,\n    public_transport_score: 9.0,\n    average_rent: 3200,\n  };\n  const bosN: Neighborhood = {\n    neighborhood_id: uuid(),\n    name: \"Back Bay\",\n    city: \"Boston\",\n    amenities: [\"T\", \"Parks\", \"Museums\"],\n    safety_rating: 8.2,\n    walkability_score: 9.0,\n    public_transport_score: 8.6,\n    average_rent: 2500,\n  };\n\n  const listings: Listing[] = [\n    // SF\n    mkListing(sfN, \"123 Valencia St, SF\", 2550, 1, 1, true, [\"Gym\", \"Cafe\", \"BART\"], \"MLS\"),\n    mkListing(sfN, \"456 Dolores St, SF\", 2950, 2, 1, false, [\"Park\", \"Yoga\"], \"Craigslist\"),\n    // NY\n    mkListing(nyN, \"12 Bedford Ave, BK\", 3100, 1, 1, false, [\"Subway\", \"Nightlife\"], \"StreetEasy\"),\n    mkListing(nyN, \"85 Kent Ave, BK\", 3600, 2, 1, true, [\"Waterfront\", \"Gym\"], \"Zillow\"),\n    // Boston\n    mkListing(bosN, \"77 Boylston St, Boston\", 2200, 1, 1, false, [\"T\", \"Museum\"], \"Zillow\"),\n    mkListing(bosN, \"14 Commonwealth Ave, Boston\", 2600, 2, 1, true, [\"Parking\", \"Park\"], \"MLS\"),\n  ];\n\n  const city_events: CityEvent[] = [\n    mkEvent(\"San Francisco\", \"Mission Street Fair\", 7, \"festival\", \"Food trucks, music, and local makers.\", \"Mission District\"),\n    mkEvent(\"New York\", \"Brooklyn Tech Meetup\", 10, \"conference\", \"Talks and demos from local startups.\", \"Williamsburg\"),\n    mkEvent(\"Boston\", \"Back Bay Art Walk\", 14, \"festival\", \"Neighborhood galleries open house.\", \"Back Bay\"),\n  ];\n\n  cache = { users: [], neighborhoods: [sfN, nyN, bosN], listings, recommendations: [], city_events };\n  fs.writeFileSync(FILE, JSON.stringify(cache, null, 2));\n  return cache!;\n}\n\nfunction mkListing(n: Neighborhood, address: string, price: number, beds: number, baths: number, parking: boolean, amenities: string[], src: string): Listing {\n  return {\n    listing_id: uuid(),\n    address,\n    neighborhood_id: n.neighborhood_id,\n    price,\n    lease_length: \"12 months\",\n    num_bedrooms: beds,\n    num_bathrooms: baths,\n    parking_available: parking,\n    move_in_date: new Date().toISOString().slice(0, 10),\n    amenities,\n    listing_source: src,\n    last_updated: new Date().toISOString(),\n  };\n}\n\nfunction mkEvent(city: string, name: string, inDays: number, type: string, desc: string, loc: string): CityEvent {\n  const d = new Date();\n  d.setDate(d.getDate() + inDays);\n  return { event_id: uuid(), city, event_name: name, event_date: d.toISOString().slice(0, 10), event_type: type, event_description: desc, event_location: loc };\n}\n\nexport function uuid(): UUID {\n  // Use randomUUID when available; fall back to simple\n  if ('randomUUID' in crypto && typeof crypto.randomUUID === 'function') {\n    return crypto.randomUUID();\n  }\n  return Math.random().toString(36).slice(2) + Math.random().toString(36).slice(2);\n}\n\nexport function db(): DB {\n  return ensureSeed();\n}\n\nexport function save() {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!fs.existsSync(DATA_DIR)) fs.mkdirSync(DATA_DIR, { recursive: true });\n    fs.writeFileSync(FILE, JSON.stringify(cache, null, 2));\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///Users/vvirtonen/MoveMate/src/lib/recommend.ts"],"sourcesContent":["import { DB, Listing, User, db } from \"./db\";\n\nfunction budgetToRange(b: string): [number, number] | null {\n  const map: Record<string, [number, number]> = {\n    \"Under $1,000\": [0, 999],\n    \"$1,000–$1,500\": [1000, 1500],\n    \"$1,500–$2,000\": [1500, 2000],\n    \"$2,000–$2,500\": [2000, 2500],\n    \"Over $2,500\": [2501, 100000],\n  };\n  return map[b] ?? null;\n}\n\nexport function scoreListings(user: User, dbi: DB = db()): { listing: Listing; score: number; reason: string }[] {\n  const nById = new Map(dbi.neighborhoods.map((n) => [n.neighborhood_id, n] as const));\n  const [min, max] = budgetToRange(user.budget_range) ?? [0, 100000];\n  const hasCar = !!user.owns_car;\n\n  const results = dbi.listings\n    .filter((l) => {\n      const n = nById.get(l.neighborhood_id)!;\n      return n.city === user.location_intent; // city match only for demo\n    })\n    .map((l) => {\n      const n = nById.get(l.neighborhood_id)!;\n      let score = 0;\n      const reasons: string[] = [];\n\n      // Budget fit\n      if (l.price >= min && l.price <= max) {\n        score += 3;\n        reasons.push(\"Fits your budget\");\n      } else if (Math.abs(l.price - Math.max(min, Math.min(max, l.price))) < 300) {\n        score += 1.5;\n        reasons.push(\"Near your budget\");\n      }\n\n      // Interests vs amenities/neighborhood\n      const low = user.interests.map((i) => i.toLowerCase());\n      const amen = (l.amenities || []).map((a) => a.toLowerCase());\n      if (low.some((i) => amen.some((a) => a.includes(i.split(\" \")[0])))) {\n        score += 2;\n        reasons.push(\"Matches your interests\");\n      }\n\n      // Walkability / transit preference signal from interests\n      if (low.some((i) => [\"running\", \"arts\", \"museum\", \"nightlife\"].some((k) => i.includes(k)))) {\n        score += n.walkability_score / 10;\n      }\n\n      // Parking for car owners\n      if (hasCar && l.parking_available) {\n        score += 1.5;\n        reasons.push(\"Has parking\");\n      }\n\n      // Freshness\n      score += 0.5;\n\n      return { listing: l, score, reason: reasons.join(\", \") };\n    })\n    .sort((a, b) => b.score - a.score);\n\n  return results;\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,SAAS,cAAc,CAAS;IAC9B,MAAM,MAAwC;QAC5C,gBAAgB;YAAC;YAAG;SAAI;QACxB,iBAAiB;YAAC;YAAM;SAAK;QAC7B,iBAAiB;YAAC;YAAM;SAAK;QAC7B,iBAAiB;YAAC;YAAM;SAAK;QAC7B,eAAe;YAAC;YAAM;SAAO;IAC/B;IACA,OAAO,GAAG,CAAC,EAAE,IAAI;AACnB;AAEO,SAAS,cAAc,IAAU,EAAE,MAAU,CAAA,GAAA,kHAAA,CAAA,KAAE,AAAD,GAAG;IACtD,MAAM,QAAQ,IAAI,IAAI,IAAI,aAAa,CAAC,GAAG,CAAC,CAAC,IAAM;YAAC,EAAE,eAAe;YAAE;SAAE;IACzE,MAAM,CAAC,KAAK,IAAI,GAAG,cAAc,KAAK,YAAY,KAAK;QAAC;QAAG;KAAO;IAClE,MAAM,SAAS,CAAC,CAAC,KAAK,QAAQ;IAE9B,MAAM,UAAU,IAAI,QAAQ,CACzB,MAAM,CAAC,CAAC;QACP,MAAM,IAAI,MAAM,GAAG,CAAC,EAAE,eAAe;QACrC,OAAO,EAAE,IAAI,KAAK,KAAK,eAAe,EAAE,2BAA2B;IACrE,GACC,GAAG,CAAC,CAAC;QACJ,MAAM,IAAI,MAAM,GAAG,CAAC,EAAE,eAAe;QACrC,IAAI,QAAQ;QACZ,MAAM,UAAoB,EAAE;QAE5B,aAAa;QACb,IAAI,EAAE,KAAK,IAAI,OAAO,EAAE,KAAK,IAAI,KAAK;YACpC,SAAS;YACT,QAAQ,IAAI,CAAC;QACf,OAAO,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,KAAK,EAAE,KAAK,MAAM,KAAK;YAC1E,SAAS;YACT,QAAQ,IAAI,CAAC;QACf;QAEA,sCAAsC;QACtC,MAAM,MAAM,KAAK,SAAS,CAAC,GAAG,CAAC,CAAC,IAAM,EAAE,WAAW;QACnD,MAAM,OAAO,CAAC,EAAE,SAAS,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,IAAM,EAAE,WAAW;QACzD,IAAI,IAAI,IAAI,CAAC,CAAC,IAAM,KAAK,IAAI,CAAC,CAAC,IAAM,EAAE,QAAQ,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK;YAClE,SAAS;YACT,QAAQ,IAAI,CAAC;QACf;QAEA,yDAAyD;QACzD,IAAI,IAAI,IAAI,CAAC,CAAC,IAAM;gBAAC;gBAAW;gBAAQ;gBAAU;aAAY,CAAC,IAAI,CAAC,CAAC,IAAM,EAAE,QAAQ,CAAC,MAAM;YAC1F,SAAS,EAAE,iBAAiB,GAAG;QACjC;QAEA,yBAAyB;QACzB,IAAI,UAAU,EAAE,iBAAiB,EAAE;YACjC,SAAS;YACT,QAAQ,IAAI,CAAC;QACf;QAEA,YAAY;QACZ,SAAS;QAET,OAAO;YAAE,SAAS;YAAG;YAAO,QAAQ,QAAQ,IAAI,CAAC;QAAM;IACzD,GACC,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,GAAG,EAAE,KAAK;IAEnC,OAAO;AACT","debugId":null}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":["file:///Users/vvirtonen/MoveMate/src/app/api/submit/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { db, save, uuid, User } from \"@/lib/db\";\nimport { scoreListings } from \"@/lib/recommend\";\n\nexport async function POST(req: Request) {\n  const body = await req.json();\n  const d = db();\n\n  const user: User = {\n    user_id: uuid(),\n    name: body.name ?? \"\",\n    email: body.email ?? \"\",\n    profile_url: body.profile,\n    location_intent: body.city,\n    budget_range: body.budget,\n    lease_length: body.lease || undefined,\n    num_occupants: body.people && body.people !== \"Family\" ? Number(body.people.replace(\"+\", \"\")) || undefined : undefined,\n    owns_car: body.car ? body.car === \"Yes\" : undefined,\n    preferences: {},\n    interests: body.interests || [],\n  };\n  d.users.push(user);\n\n  // Score and save top 3 recommendations\n  const scored = scoreListings(user, d).slice(0, 3);\n  for (const s of scored) {\n    d.recommendations.push({\n      recommendation_id: uuid(),\n      user_id: user.user_id,\n      listing_id: s.listing.listing_id,\n      score: Number(s.score.toFixed(2)),\n      recommendation_reason: s.reason,\n    });\n  }\n\n  save();\n\n  return NextResponse.json({ ok: true, redirect: `/dashboard?user_id=${user.user_id}`, payload: body });\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,GAAY;IACrC,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,MAAM,IAAI,CAAA,GAAA,kHAAA,CAAA,KAAE,AAAD;IAEX,MAAM,OAAa;QACjB,SAAS,CAAA,GAAA,kHAAA,CAAA,OAAI,AAAD;QACZ,MAAM,KAAK,IAAI,IAAI;QACnB,OAAO,KAAK,KAAK,IAAI;QACrB,aAAa,KAAK,OAAO;QACzB,iBAAiB,KAAK,IAAI;QAC1B,cAAc,KAAK,MAAM;QACzB,cAAc,KAAK,KAAK,IAAI;QAC5B,eAAe,KAAK,MAAM,IAAI,KAAK,MAAM,KAAK,WAAW,OAAO,KAAK,MAAM,CAAC,OAAO,CAAC,KAAK,QAAQ,YAAY;QAC7G,UAAU,KAAK,GAAG,GAAG,KAAK,GAAG,KAAK,QAAQ;QAC1C,aAAa,CAAC;QACd,WAAW,KAAK,SAAS,IAAI,EAAE;IACjC;IACA,EAAE,KAAK,CAAC,IAAI,CAAC;IAEb,uCAAuC;IACvC,MAAM,SAAS,CAAA,GAAA,yHAAA,CAAA,gBAAa,AAAD,EAAE,MAAM,GAAG,KAAK,CAAC,GAAG;IAC/C,KAAK,MAAM,KAAK,OAAQ;QACtB,EAAE,eAAe,CAAC,IAAI,CAAC;YACrB,mBAAmB,CAAA,GAAA,kHAAA,CAAA,OAAI,AAAD;YACtB,SAAS,KAAK,OAAO;YACrB,YAAY,EAAE,OAAO,CAAC,UAAU;YAChC,OAAO,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC;YAC9B,uBAAuB,EAAE,MAAM;QACjC;IACF;IAEA,CAAA,GAAA,kHAAA,CAAA,OAAI,AAAD;IAEH,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,IAAI;QAAM,UAAU,CAAC,mBAAmB,EAAE,KAAK,OAAO,EAAE;QAAE,SAAS;IAAK;AACrG","debugId":null}}]
}