{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/vvirtonen/MoveMate/src/app/dashboard/page.tsx"],"sourcesContent":["\"use client\";\nimport useSWR from \"swr\";\nimport Image from \"next/image\";\nimport { useSearchParams } from \"next/navigation\";\nimport { Suspense } from \"react\";\nimport type { Listing } from \"@/lib/db\";\n\nconst fetcher = (url: string) => fetch(url).then((r) => r.json());\n\ntype Event = {\n  event_id: string;\n  event_name: string;\n  event_type: string;\n  event_date: string;\n  event_location: string;\n  event_description: string;\n};\n\ntype UserSummary = { location_intent: string };\n\nfunction DashboardContent() {\n  const sp = useSearchParams();\n  const userId = sp.get(\"user_id\");\n  const { data, error } = useSWR(userId ? `/api/dashboard?user_id=${userId}` : null, fetcher);\n\n  if (!userId) return <main className=\"mx-auto max-w-3xl px-4 py-10 text-zinc-300\">Missing user ID.</main>;\n  if (error) return <main className=\"mx-auto max-w-3xl px-4 py-10 text-zinc-300\">Failed to load.</main>;\n  if (!data) return <main className=\"mx-auto max-w-3xl px-4 py-10 text-zinc-300\">Loading dashboard…</main>;\n\n  const { user, listings, events }: { user: UserSummary; listings: Listing[]; events: Event[] } = data;\n\n  return (\n    <main className=\"mx-auto max-w-3xl px-4 py-8\">\n      <header className=\"flex items-center gap-3\">\n        <div className=\"relative h-10 w-10\">\n          <Image src=\"/uploads/MoveMate.jpg\" alt=\"MoveMate\" fill className=\"object-contain\" />\n        </div>\n        <div>\n          <h1 className=\"text-xl font-semibold\">Your MoveMate Dashboard</h1>\n          <p className=\"text-sm text-zinc-400\">Top picks for {user.location_intent}</p>\n        </div>\n      </header>\n\n      <section className=\"mt-8\">\n        <h2 className=\"text-lg font-medium\">Top Listings</h2>\n        <div className=\"mt-3 grid gap-4 sm:grid-cols-2\">\n          {listings.map((l: Listing) => (\n            <article key={l.listing_id} className=\"rounded-xl border border-zinc-800 bg-zinc-900/40 p-4\">\n              <h3 className=\"font-medium\">{l.address}</h3>\n              <p className=\"mt-1 text-sm text-zinc-400\">${\"\"}{l.price} • {l.num_bedrooms} bd / {l.num_bathrooms} ba</p>\n              <div className=\"mt-2 flex flex-wrap gap-2\">\n                {l.amenities.slice(0, 4).map((a: string) => (\n                  <span key={a} className=\"rounded-full border border-zinc-700 px-2 py-0.5 text-xs text-zinc-300\">{a}</span>\n                ))}\n              </div>\n              <p className=\"mt-2 text-xs text-zinc-500\">Source: {l.listing_source}</p>\n            </article>\n          ))}\n        </div>\n      </section>\n\n      <section className=\"mt-8\">\n        <h2 className=\"text-lg font-medium\">Upcoming in {user.location_intent}</h2>\n        <ul className=\"mt-3 space-y-3\">\n          {events.map((e) => (\n            <li key={e.event_id} className=\"rounded-xl border border-zinc-800 bg-zinc-900/40 p-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"font-medium\">{e.event_name}</p>\n                  <p className=\"text-sm text-zinc-400\">{e.event_type} • {e.event_date} • {e.event_location}</p>\n                </div>\n                <span className=\"rounded-md bg-[#44065f] px-2 py-1 text-xs text-white\">{user.location_intent}</span>\n              </div>\n              <p className=\"mt-2 text-sm text-zinc-300\">{e.event_description}</p>\n            </li>\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default function DashboardPage() {\n  return (\n    <Suspense fallback={<main className=\"mx-auto max-w-3xl px-4 py-10 text-zinc-300\">Loading dashboard…</main>}>\n      <DashboardContent />\n    </Suspense>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAJA;;;;;;AAOA,MAAM,UAAU,CAAC,MAAgB,MAAM,KAAK,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI;AAa9D,SAAS;IACP,MAAM,KAAK,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IACzB,MAAM,SAAS,GAAG,GAAG,CAAC;IACtB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,UAAM,AAAD,EAAE,SAAS,CAAC,uBAAuB,EAAE,QAAQ,GAAG,MAAM;IAEnF,IAAI,CAAC,QAAQ,qBAAO,8OAAC;QAAK,WAAU;kBAA6C;;;;;;IACjF,IAAI,OAAO,qBAAO,8OAAC;QAAK,WAAU;kBAA6C;;;;;;IAC/E,IAAI,CAAC,MAAM,qBAAO,8OAAC;QAAK,WAAU;kBAA6C;;;;;;IAE/E,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAgE;IAEhG,qBACE,8OAAC;QAAK,WAAU;;0BACd,8OAAC;gBAAO,WAAU;;kCAChB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;4BAAC,KAAI;4BAAwB,KAAI;4BAAW,IAAI;4BAAC,WAAU;;;;;;;;;;;kCAEnE,8OAAC;;0CACC,8OAAC;gCAAG,WAAU;0CAAwB;;;;;;0CACtC,8OAAC;gCAAE,WAAU;;oCAAwB;oCAAe,KAAK,eAAe;;;;;;;;;;;;;;;;;;;0BAI5E,8OAAC;gBAAQ,WAAU;;kCACjB,8OAAC;wBAAG,WAAU;kCAAsB;;;;;;kCACpC,8OAAC;wBAAI,WAAU;kCACZ,SAAS,GAAG,CAAC,CAAC,kBACb,8OAAC;gCAA2B,WAAU;;kDACpC,8OAAC;wCAAG,WAAU;kDAAe,EAAE,OAAO;;;;;;kDACtC,8OAAC;wCAAE,WAAU;;4CAA6B;4CAAE;4CAAI,EAAE,KAAK;4CAAC;4CAAI,EAAE,YAAY;4CAAC;4CAAO,EAAE,aAAa;4CAAC;;;;;;;kDAClG,8OAAC;wCAAI,WAAU;kDACZ,EAAE,SAAS,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,kBAC5B,8OAAC;gDAAa,WAAU;0DAAyE;+CAAtF;;;;;;;;;;kDAGf,8OAAC;wCAAE,WAAU;;4CAA6B;4CAAS,EAAE,cAAc;;;;;;;;+BARvD,EAAE,UAAU;;;;;;;;;;;;;;;;0BAchC,8OAAC;gBAAQ,WAAU;;kCACjB,8OAAC;wBAAG,WAAU;;4BAAsB;4BAAa,KAAK,eAAe;;;;;;;kCACrE,8OAAC;wBAAG,WAAU;kCACX,OAAO,GAAG,CAAC,CAAC,kBACX,8OAAC;gCAAoB,WAAU;;kDAC7B,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;;kEACC,8OAAC;wDAAE,WAAU;kEAAe,EAAE,UAAU;;;;;;kEACxC,8OAAC;wDAAE,WAAU;;4DAAyB,EAAE,UAAU;4DAAC;4DAAI,EAAE,UAAU;4DAAC;4DAAI,EAAE,cAAc;;;;;;;;;;;;;0DAE1F,8OAAC;gDAAK,WAAU;0DAAwD,KAAK,eAAe;;;;;;;;;;;;kDAE9F,8OAAC;wCAAE,WAAU;kDAA8B,EAAE,iBAAiB;;;;;;;+BARvD,EAAE,QAAQ;;;;;;;;;;;;;;;;;;;;;;AAe/B;AAEe,SAAS;IACtB,qBACE,8OAAC,qMAAA,CAAA,WAAQ;QAAC,wBAAU,8OAAC;YAAK,WAAU;sBAA6C;;;;;;kBAC/E,cAAA,8OAAC;;;;;;;;;;AAGP","debugId":null}}]
}